# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Compile Python application

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "main" ]

jobs:
  productionize:
    runs-on: ubuntu-latest
    env:
      SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest coverage
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest through coverage
      run: |
        coverage run -m pytest src/
    - name: Check coverage
      run: |
        coverage report --fail-under=80
  build:
    needs: productionize
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: grompras/oc_hub:${{ github.sha }}

  await-approval:
    if: github.ref == 'refs/heads/main'
    needs: build
    environment: deploy-approval
    runs-on: ubuntu-latest
    steps:
      - name: "Manual deploy"
        run: echo "Awaiting manual approval to deploy to Render..."

  deploy:
    if: github.ref == 'refs/heads/main' && needs.await-approval.result == 'success'
    needs: await-approval
    runs-on: ubuntu-latest
    steps:
      - name: Post request to deploy
        run: curl -X POST ${{ secrets.WEBHOOK_URL }}&imgURL=docker.io%2Fgrompras%2Foc_hub%3A${{ github.sha }}
